{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/instance.js","webpack://backend/./backend/src/controller/test.js","webpack://backend/external \"require3\"","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/instance.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/middleware/instance.js","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,eAAe,mBAAO,CAAC,CAAa;AACpC,iBAAiB,mBAAO,CAAC,CAAe;AACxC,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,EAAoB;AAC3C,oBAAoB,mBAAO,CAAC,EAAyB;;AAErD;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA,gBAAgB,mBAAO,CAAC,CAAyB;AACjD,iBAAiB,mBAAO,CAAC,CAA0B;AACnD,aAAa,mBAAO,CAAC,CAAsB;;AAE3C;AACA;AACA,GAAG,oFAAoF;AACvF,GAAG,kFAAkF;AACrF,GAAG,8EAA8E;AACjF;AACA,GAAG,qEAAqE,SAAS,2DAA2D,EAAE,EAAE;AAChJ,GAAG;AACH;AACA,iBAAiB,wBAAwB;AACzC,cAAc,2DAA2D;AACzE,KAAK;AACL,GAAG;AACH;;;;;;;ACjBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACjBA,iBAAiB,mBAAO,CAAC,CAAU;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACbA,qC;;;;;;ACAA,gBAAgB,mBAAO,CAAC,CAAsB;AAC9C,iBAAiB,mBAAO,CAAC,CAAuB;;AAEhD;AACA;AACA;AACA;;;;;;;ACNA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,uCAAuC;AACtF;AACA;AACA;AACA,+DAA+D,0BAA0B;AACzF,iDAAiD,wCAAwC;AACzF;AACA;AACA;AACA;AACA,+DAA+D,0BAA0B;AACzF,iDAAiD,sDAAsD;AACvG;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC3DA;;AAEA;;AAEA;AACA,iDAAiD,2BAA2B;AAC5E;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;;;;;;ACnBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnBA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA,iBAAiB,mBAAO,CAAC,EAA0B;;AAEnD;AACA;AACA;;;;;;;ACJA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA,kBAAkB,mBAAO,CAAC,EAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,kBAAkB;AAClB;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const routes = require('./routes.js');\nconst services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    config,\n    locales,\n    errors,\n    middlewares,\n    models,\n    meta,\n  };\n\n};\n","const version = require('./controller/version.js');\nconst instance = require('./controller/instance.js');\nconst test = require('./controller/test.js');\n\nmodule.exports = [\n  // version\n  { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n  { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n  { method: 'get', path: 'test/instance', controller: test, middlewares: 'test' },\n  // instance\n  { method: 'post', path: 'instance/item', controller: instance, meta: { right: { type: 'function', module: 'a-settings', name: 'settings' } } },\n  { method: 'post', path: 'instance/save', controller: instance, middlewares: 'validate',\n    meta: {\n      validate: { validator: 'instance' },\n      right: { type: 'function', module: 'a-settings', name: 'settings' },\n    },\n  },\n];\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class InstanceController extends app.Controller {\n\n    async item() {\n      const res = await this.service.instance.item();\n      this.ctx.success(res);\n    }\n\n    async save() {\n      await this.service.instance.save({\n        data: this.ctx.request.body.data,\n      });\n      this.ctx.success();\n    }\n\n  }\n  return InstanceController;\n};\n","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = app => {\n  class TestController extends app.Controller {\n\n    async instance() {\n      assert(this.ctx.instance.id === 1);\n      this.ctx.success();\n    }\n\n  }\n  return TestController;\n};\n","module.exports = require(\"require3\");","const version = require('./service/version.js');\nconst instance = require('./service/instance.js');\n\nmodule.exports = {\n  version,\n  instance,\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aInstance\n        const sql = `\n          CREATE TABLE aInstance (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            disabled int(11) DEFAULT '0',\n            name varchar(255) DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.db.query(sql);\n      }\n      if (options.version === 2) {\n        // aInstance\n        const sql = `\n          ALTER TABLE aInstance\n          ADD COLUMN title varchar(255) DEFAULT NULL\n        `;\n        await this.ctx.model.query(sql);\n      }\n      if (options.version === 3) {\n        // aInstance\n        const sql = `\n          ALTER TABLE aInstance\n          ADD COLUMN meta json DEFAULT NULL\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        await this.ctx.db.insert('aInstance', { name: options.subdomain, disabled: 0 });\n      }\n      if (options.version === 2) {\n        if (options.title) {\n          const instance = await this.ctx.db.get('aInstance', { name: options.subdomain });\n          await this.ctx.db.update('aInstance', { id: instance.id, title: options.title });\n        }\n      }\n      if (options.version === 3) {\n        if (options.meta) {\n          const instance = await this.ctx.db.get('aInstance', { name: options.subdomain });\n          await this.ctx.db.update('aInstance', { id: instance.id, meta: JSON.stringify(options.meta) });\n        }\n      }\n    }\n\n  }\n\n  return Version;\n};\n","module.exports = app => {\n\n  class Instance extends app.Service {\n\n    async item() {\n      return await this.ctx.db.get('aInstance', { id: this.ctx.instance.id });\n    }\n\n    async save({ data }) {\n      await this.ctx.db.update('aInstance', {\n        id: this.ctx.instance.id,\n        title: data.title,\n        meta: data.meta,\n      });\n    }\n\n  }\n\n  return Instance;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    instance: {\n      global: true,\n      dependencies: 'cachemem',\n      ignore: /(\\/version\\/(start|check|update|initModule)|\\/a\\/instance\\/version\\/init|\\/a\\/version\\/version\\/init)/,\n    },\n  };\n\n  // cache\n  config.cache = {\n    timeout: 3 * 1000, // 3s\n  };\n\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  Instance: '实例',\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","const instance = require('./middleware/instance.js');\n\nmodule.exports = {\n  instance,\n};\n","module.exports = () => {\n  return async function instance(ctx, next) {\n\n    const timeout = ctx.config.module('a-instance').cache.timeout;\n    let instance = timeout > 0 ? ctx.cache.mem.get('instance') : null;\n    if (!instance) {\n      instance = await ctx.db.get('aInstance', { name: ctx.subdomain });\n      if (instance) {\n        instance.meta = JSON.parse(instance.meta);\n        if (timeout > 0) {\n          ctx.cache.mem.set('instance', instance, timeout);\n        }\n      }\n    }\n\n    if (!/\\/version\\/init/.test(ctx.request.url) && (!instance || instance.disabled)) {\n      ctx.throw(423); // locked\n    }\n\n    ctx.instance = instance;\n\n    // next\n    await next();\n  };\n};\n","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    validation: {\n      validators: {\n        instance: {\n          schemas: 'instance',\n        },\n      },\n      keywords: {},\n      schemas: {\n        instance: schemas.instance,\n      },\n    },\n    settings: {\n      instance: {\n        actionPath: 'instance/config',\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const schemas = {};\n  // instance\n  schemas.instance = {\n    type: 'object',\n    properties: {\n      name: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Subdomain',\n        ebReadOnly: true,\n      },\n      title: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Title',\n        notEmpty: true,\n      },\n      meta: {\n        type: 'string',\n        ebType: 'text',\n        ebTextarea: true,\n        ebTitle: 'Meta',\n        notEmpty: true,\n      },\n    },\n  };\n\n  return schemas;\n};\n"],"sourceRoot":""}