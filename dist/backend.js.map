{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/config/middleware/instance.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/services.js","webpack://backend/external \"require3\"","webpack://backend/./backend/src/controller/test.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/main.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;ACrBA;;AAEA;AACA;AACA;;;;;;;ACJA;AACA;AACA;;;;;;;ACFA;AACA;;;;;;;ACDA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,uCAAuC;AACtF;AACA;;AAEA;;AAEA;AACA;;;;;;;AC/BA;;AAEA;AACA;AACA;;;;;;;ACJA,qC;;;;;;ACAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACbA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACfA;AACA;;AAEA;AACA,GAAG,oFAAoF;AACvF,GAAG,kFAAkF;AACrF,GAAG,8EAA8E;AACjF;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = () => {\n  return async function instance(ctx, next) {\n\n    const timeout = ctx.config.module('a-instance').cache.timeout;\n    let instance = timeout > 0 ? ctx.cache.mem.get('instance') : null;\n    if (!instance) {\n      instance = await ctx.db.get('aInstance', { name: ctx.subdomain });\n      if (instance && timeout > 0) {\n        ctx.cache.mem.set('instance', instance, timeout);\n      }\n    }\n\n    if (!/\\/version\\/init/.test(ctx.request.url) && (!instance || instance.disabled)) {\n      ctx.throw(423); // locked\n    }\n\n    ctx.instance = instance;\n\n    // next\n    await next();\n  };\n};\n","const instance = require('./middleware/instance.js');\n\nmodule.exports = {\n  instance,\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    instance: {\n      global: true,\n      dependencies: 'cachemem',\n      ignore: /(\\/version\\/(start|check|update|initModule)|\\/a\\/instance\\/version\\/init|\\/a\\/version\\/version\\/init)/,\n    },\n  };\n\n  // cache\n  config.cache = {\n    timeout: 1 * 24 * 3600 * 1000, // 1 å¤©\n  };\n\n  return config;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aInstance\n        const sql = `\n          CREATE TABLE aInstance (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            disabled int(11) DEFAULT '0',\n            name varchar(255) DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.db.query(sql);\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        await this.ctx.db.insert('aInstance', { name: options.subdomain, disabled: 0 });\n      }\n    }\n\n  }\n\n  return Version;\n};\n","const version = require('./service/version.js');\n\nmodule.exports = {\n  version,\n};\n","module.exports = require(\"require3\");","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = app => {\n  class TestController extends app.Controller {\n\n    async instance() {\n      assert(this.ctx.instance.id === 1);\n      this.ctx.success();\n    }\n\n  }\n  return TestController;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","const version = require('./controller/version.js');\nconst test = require('./controller/test.js');\n\nmodule.exports = [\n  { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n  { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n  { method: 'get', path: 'test/instance', controller: test, middlewares: 'test' },\n];\n","const routes = require('./routes.js');\nconst services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  return {\n    routes,\n    services,\n    config,\n    locales,\n    errors,\n    middlewares,\n  };\n\n};\n"],"sourceRoot":""}